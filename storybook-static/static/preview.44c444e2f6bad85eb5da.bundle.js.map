{"version":3,"file":"static/preview.44c444e2f6bad85eb5da.bundle.js","sources":["webpack:///./src/styles/typography/index.ts"],"sourcesContent":["import styled from \"react-emotion\";\n\nimport { theme } from \"../theme\";\n\n/*! Typebase.less v0.1.0 | MIT License */\n/* Types */\ninterface ITypography {\n  fontColour?: string;\n  fontAlign?: string;\n  maxWidth?: number;\n}\n\n/* Setup */\nexport const font = {\n  fontFamily: `Roboto, sans-serif`,\n  fontWeight: 300,\n  fontSize: 14,\n  color: theme.darkest,\n  textAlign: \"left\",\n  margin: \"0 auto\",\n  maxWidth: \"100%\"\n};\n\nconst headingFont = {\n  ...font,\n  fontWeight: 500\n};\n\nconst lis = {\n  ...font,\n  lineHeight: \"1.5rem\"\n};\n\nconst headings = {\n  /* Change heading typefaces here */\n  ...headingFont,\n  marginTop: \"1.5rem\",\n  marginBottom: 0,\n  lineHeight: \"1.5rem\"\n};\n\nconst tables = {\n  padding: 0,\n  lineHeight: 33\n};\n\n/* Copy & Lists */\nexport const P = styled.p<ITypography>(\n  {\n    ...(font as any),\n    label: \"p\",\n    lineHeight: \"1.5rem\",\n    marginTop: \"1.5rem\",\n    marginBottom: 0\n  },\n  ({ fontColour, fontAlign, maxWidth }: any) => ({\n    color: fontColour ? fontColour : font.color,\n    textAlign: fontAlign ? fontAlign : font.textAlign,\n    width: maxWidth ? maxWidth : font.maxWidth\n  })\n);\n\nexport const UL = styled.ul({\n  ...(font as any),\n  label: \"ul\",\n  marginTop: \"1.5rem\",\n  marginBottom: \"1.5rem\"\n});\n\nexport const OL = styled(UL)({\n  ...(font as any),\n  label: \"ol\",\n  marginTop: 0,\n  marginBottom: 0,\n  \"& li\": {\n    ...lis\n  }\n});\n\nexport const LI = styled.li({\n  ...(lis as any),\n  label: \"li\"\n});\n\nexport const BLOCKQUOTE = styled.blockquote({\n  label: \"block-quote\",\n  lineHeight: \"1.5rem\",\n  marginTop: \"1.5rem\",\n  marginBottom: \"1.5rem\"\n});\n\n/* Headings */\nexport const H1 = styled.h1<ITypography>(\n  {\n    ...(headings as any),\n    label: \"h1\",\n    fontSize: \"4.242rem\",\n    lineHeight: \"4.5rem\",\n    marginTop: \"3rem\"\n  },\n  ({ fontColour, fontAlign }: any) => ({\n    color: fontColour ? fontColour : headingFont.color,\n    textAlign: fontAlign ? fontAlign : headingFont.textAlign\n  })\n);\n\nexport const H2 = styled.h2<ITypography>(\n  {\n    ...(headings as any),\n    label: \"h2\",\n    fontSize: \"2.828rem\",\n    lineHeight: \"3rem\",\n    marginTop: \"3rem\"\n  },\n  ({ fontColour, fontAlign }: any) => ({\n    color: fontColour ? fontColour : headingFont.color,\n    textAlign: fontAlign ? fontAlign : headingFont.textAlign\n  })\n);\n\nexport const H3 = styled.h3<ITypography>(\n  {\n    ...(headings as any),\n    label: \"h3\",\n    fontSize: \"1.414rem\"\n  },\n  ({ fontColour, fontAlign }: any) => ({\n    color: fontColour ? fontColour : headingFont.color,\n    textAlign: fontAlign ? fontAlign : headingFont.textAlign\n  })\n);\n\nexport const H4 = styled.h4<ITypography>(\n  {\n    ...(headings as any),\n    label: \"h4\",\n    fontSize: \"0.707rem\"\n  },\n  ({ fontColour, fontAlign }: any) => ({\n    color: fontColour ? fontColour : headingFont.color,\n    textAlign: fontAlign ? fontAlign : headingFont.textAlign\n  })\n);\n\nexport const H5 = styled.h5<ITypography>(\n  {\n    ...(headings as any),\n    label: \"h5\",\n    fontSize: \"0.4713333333333333rem\"\n  },\n  ({ fontColour, fontAlign }: any) => ({\n    color: fontColour ? fontColour : headingFont.color,\n    textAlign: fontAlign ? fontAlign : headingFont.textAlign\n  })\n);\n\nexport const H6 = styled.h6<ITypography>(\n  {\n    ...(headings as any),\n    label: \"h6\",\n    fontSize: \"0.3535rem\"\n  },\n  ({ fontColour, fontAlign }: any) => ({\n    color: fontColour ? fontColour : headingFont.color,\n    textAlign: fontAlign ? fontAlign : headingFont.textAlign\n  })\n);\n\n/* Tables */\nexport const TABLE = styled.table({\n  ...(font as any),\n  ...tables,\n  label: \"table\",\n  marginTop: \"1.5rem\",\n  borderSpacing: 0,\n  borderCollapse: \"collapse\"\n});\n\nexport const TD = styled.td({\n  ...tables,\n  label: \"td\"\n});\n\nexport const TH = styled.th({\n  ...(font as any),\n  ...tables,\n  label: \"th\"\n});\n\n/* Code blocks */\nexport const CODE = styled.code({\n  label: \"code\",\n  verticalAlign: \"bottom\"\n});\n\n/* Leading paragraph text */\nexport const LEAD = {\n  ...(font as any),\n  label: \"lead\",\n  fontSize: \"1.414rem\"\n};\n\n/* Hug the block above you */\nexport const HUG = {\n  label: \"hug\",\n  marginTop: 0\n};\n"],"mappings":"AAaA","sourceRoot":""}